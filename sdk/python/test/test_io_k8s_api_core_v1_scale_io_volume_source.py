# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.io_k8s_api_core_v1_scale_io_volume_source import IoK8sApiCoreV1ScaleIOVolumeSource

class TestIoK8sApiCoreV1ScaleIOVolumeSource(unittest.TestCase):
    """IoK8sApiCoreV1ScaleIOVolumeSource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1ScaleIOVolumeSource:
        """Test IoK8sApiCoreV1ScaleIOVolumeSource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1ScaleIOVolumeSource`
        """
        model = IoK8sApiCoreV1ScaleIOVolumeSource()
        if include_optional:
            return IoK8sApiCoreV1ScaleIOVolumeSource(
                fs_type = '',
                gateway = '',
                protection_domain = '',
                read_only = True,
                secret_ref = jobset.models.io/k8s/api/core/v1/local_object_reference.io.k8s.api.core.v1.LocalObjectReference(
                    name = '', ),
                ssl_enabled = True,
                storage_mode = '',
                storage_pool = '',
                system = '',
                volume_name = ''
            )
        else:
            return IoK8sApiCoreV1ScaleIOVolumeSource(
                gateway = '',
                secret_ref = jobset.models.io/k8s/api/core/v1/local_object_reference.io.k8s.api.core.v1.LocalObjectReference(
                    name = '', ),
                system = '',
        )
        """

    def testIoK8sApiCoreV1ScaleIOVolumeSource(self):
        """Test IoK8sApiCoreV1ScaleIOVolumeSource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
