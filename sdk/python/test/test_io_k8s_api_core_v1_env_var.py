# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.io_k8s_api_core_v1_env_var import IoK8sApiCoreV1EnvVar

class TestIoK8sApiCoreV1EnvVar(unittest.TestCase):
    """IoK8sApiCoreV1EnvVar unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1EnvVar:
        """Test IoK8sApiCoreV1EnvVar
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1EnvVar`
        """
        model = IoK8sApiCoreV1EnvVar()
        if include_optional:
            return IoK8sApiCoreV1EnvVar(
                name = '',
                value = '',
                value_from = jobset.models.io/k8s/api/core/v1/env_var_source.io.k8s.api.core.v1.EnvVarSource(
                    config_map_key_ref = jobset.models.io/k8s/api/core/v1/config_map_key_selector.io.k8s.api.core.v1.ConfigMapKeySelector(
                        key = '', 
                        name = '', 
                        optional = True, ), 
                    field_ref = jobset.models.io/k8s/api/core/v1/object_field_selector.io.k8s.api.core.v1.ObjectFieldSelector(
                        api_version = '', 
                        field_path = '', ), 
                    resource_field_ref = jobset.models.io/k8s/api/core/v1/resource_field_selector.io.k8s.api.core.v1.ResourceFieldSelector(
                        container_name = '', 
                        divisor = '', 
                        resource = '', ), 
                    secret_key_ref = jobset.models.io/k8s/api/core/v1/secret_key_selector.io.k8s.api.core.v1.SecretKeySelector(
                        key = '', 
                        name = '', 
                        optional = True, ), )
            )
        else:
            return IoK8sApiCoreV1EnvVar(
                name = '',
        )
        """

    def testIoK8sApiCoreV1EnvVar(self):
        """Test IoK8sApiCoreV1EnvVar"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
