# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.io_k8s_api_core_v1_node_selector import IoK8sApiCoreV1NodeSelector

class TestIoK8sApiCoreV1NodeSelector(unittest.TestCase):
    """IoK8sApiCoreV1NodeSelector unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1NodeSelector:
        """Test IoK8sApiCoreV1NodeSelector
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1NodeSelector`
        """
        model = IoK8sApiCoreV1NodeSelector()
        if include_optional:
            return IoK8sApiCoreV1NodeSelector(
                node_selector_terms = [
                    jobset.models.io/k8s/api/core/v1/node_selector_term.io.k8s.api.core.v1.NodeSelectorTerm(
                        match_expressions = [
                            jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                key = '', 
                                operator = '', 
                                values = [
                                    ''
                                    ], )
                            ], 
                        match_fields = [
                            jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                key = '', 
                                operator = '', )
                            ], )
                    ]
            )
        else:
            return IoK8sApiCoreV1NodeSelector(
                node_selector_terms = [
                    jobset.models.io/k8s/api/core/v1/node_selector_term.io.k8s.api.core.v1.NodeSelectorTerm(
                        match_expressions = [
                            jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                key = '', 
                                operator = '', 
                                values = [
                                    ''
                                    ], )
                            ], 
                        match_fields = [
                            jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                key = '', 
                                operator = '', )
                            ], )
                    ],
        )
        """

    def testIoK8sApiCoreV1NodeSelector(self):
        """Test IoK8sApiCoreV1NodeSelector"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
