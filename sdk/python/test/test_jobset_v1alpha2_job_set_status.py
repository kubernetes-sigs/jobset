# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.jobset_v1alpha2_job_set_status import JobsetV1alpha2JobSetStatus

class TestJobsetV1alpha2JobSetStatus(unittest.TestCase):
    """JobsetV1alpha2JobSetStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobsetV1alpha2JobSetStatus:
        """Test JobsetV1alpha2JobSetStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobsetV1alpha2JobSetStatus`
        """
        model = JobsetV1alpha2JobSetStatus()
        if include_optional:
            return JobsetV1alpha2JobSetStatus(
                conditions = [
                    jobset.models.io/k8s/apimachinery/pkg/apis/meta/v1/condition.io.k8s.apimachinery.pkg.apis.meta.v1.Condition(
                        last_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        message = '', 
                        observed_generation = 56, 
                        reason = '', 
                        status = '', 
                        type = '', )
                    ],
                replicated_jobs_status = [
                    jobset.models.jobset_v1alpha2_replicated_job_status.JobsetV1alpha2ReplicatedJobStatus(
                        active = 56, 
                        failed = 56, 
                        name = '', 
                        ready = 56, 
                        succeeded = 56, 
                        suspended = 56, )
                    ],
                restarts = 56,
                restarts_count_towards_max = 56,
                terminal_state = ''
            )
        else:
            return JobsetV1alpha2JobSetStatus(
        )
        """

    def testJobsetV1alpha2JobSetStatus(self):
        """Test JobsetV1alpha2JobSetStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
