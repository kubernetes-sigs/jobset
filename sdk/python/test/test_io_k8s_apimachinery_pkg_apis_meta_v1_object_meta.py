# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.io_k8s_apimachinery_pkg_apis_meta_v1_object_meta import IoK8sApimachineryPkgApisMetaV1ObjectMeta

class TestIoK8sApimachineryPkgApisMetaV1ObjectMeta(unittest.TestCase):
    """IoK8sApimachineryPkgApisMetaV1ObjectMeta unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApimachineryPkgApisMetaV1ObjectMeta:
        """Test IoK8sApimachineryPkgApisMetaV1ObjectMeta
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApimachineryPkgApisMetaV1ObjectMeta`
        """
        model = IoK8sApimachineryPkgApisMetaV1ObjectMeta()
        if include_optional:
            return IoK8sApimachineryPkgApisMetaV1ObjectMeta(
                annotations = {
                    'key' : ''
                    },
                creation_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deletion_grace_period_seconds = 56,
                deletion_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                finalizers = [
                    ''
                    ],
                generate_name = '',
                generation = 56,
                labels = {
                    'key' : ''
                    },
                managed_fields = [
                    jobset.models.io/k8s/apimachinery/pkg/apis/meta/v1/managed_fields_entry.io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry(
                        api_version = '', 
                        fields_type = '', 
                        fields_v1 = jobset.models.io/k8s/apimachinery/pkg/apis/meta/v1/fields_v1.io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1(), 
                        manager = '', 
                        operation = '', 
                        subresource = '', 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                name = '',
                namespace = '',
                owner_references = [
                    jobset.models.io/k8s/apimachinery/pkg/apis/meta/v1/owner_reference.io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference(
                        api_version = '', 
                        block_owner_deletion = True, 
                        controller = True, 
                        kind = '', 
                        name = '', 
                        uid = '', )
                    ],
                resource_version = '',
                self_link = '',
                uid = ''
            )
        else:
            return IoK8sApimachineryPkgApisMetaV1ObjectMeta(
        )
        """

    def testIoK8sApimachineryPkgApisMetaV1ObjectMeta(self):
        """Test IoK8sApimachineryPkgApisMetaV1ObjectMeta"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
