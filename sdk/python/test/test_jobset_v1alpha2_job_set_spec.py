# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.jobset_v1alpha2_job_set_spec import JobsetV1alpha2JobSetSpec

class TestJobsetV1alpha2JobSetSpec(unittest.TestCase):
    """JobsetV1alpha2JobSetSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobsetV1alpha2JobSetSpec:
        """Test JobsetV1alpha2JobSetSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobsetV1alpha2JobSetSpec`
        """
        model = JobsetV1alpha2JobSetSpec()
        if include_optional:
            return JobsetV1alpha2JobSetSpec(
                coordinator = jobset.models.jobset_v1alpha2_coordinator.JobsetV1alpha2Coordinator(
                    job_index = 56, 
                    pod_index = 56, 
                    replicated_job = '', ),
                failure_policy = jobset.models.jobset_v1alpha2_failure_policy.JobsetV1alpha2FailurePolicy(
                    max_restarts = 56, 
                    restart_strategy = '', 
                    rules = [
                        jobset.models.jobset_v1alpha2_failure_policy_rule.JobsetV1alpha2FailurePolicyRule(
                            action = '', 
                            name = '', 
                            on_job_failure_reasons = [
                                ''
                                ], 
                            target_replicated_jobs = [
                                ''
                                ], )
                        ], ),
                managed_by = '',
                network = jobset.models.jobset_v1alpha2_network.JobsetV1alpha2Network(
                    enable_dns_hostnames = True, 
                    publish_not_ready_addresses = True, 
                    subdomain = '', ),
                replicated_jobs = [
                    jobset.models.jobset_v1alpha2_replicated_job.JobsetV1alpha2ReplicatedJob(
                        depends_on = [
                            jobset.models.jobset_v1alpha2_depends_on.JobsetV1alpha2DependsOn(
                                name = '', 
                                status = '', )
                            ], 
                        name = '', 
                        replicas = 56, 
                        template = V1JobTemplateSpec(), )
                    ],
                startup_policy = jobset.models.jobset_v1alpha2_startup_policy.JobsetV1alpha2StartupPolicy(
                    startup_policy_order = '', ),
                success_policy = jobset.models.jobset_v1alpha2_success_policy.JobsetV1alpha2SuccessPolicy(
                    operator = '', 
                    target_replicated_jobs = [
                        ''
                        ], ),
                suspend = True,
                ttl_seconds_after_finished = 56
            )
        else:
            return JobsetV1alpha2JobSetSpec(
        )
        """

    def testJobsetV1alpha2JobSetSpec(self):
        """Test JobsetV1alpha2JobSetSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
