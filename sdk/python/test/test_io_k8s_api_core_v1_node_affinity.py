# coding: utf-8

"""
    JobSet SDK

    Python SDK for the JobSet API

    The version of the OpenAPI document: v0.1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from jobset.models.io_k8s_api_core_v1_node_affinity import IoK8sApiCoreV1NodeAffinity

class TestIoK8sApiCoreV1NodeAffinity(unittest.TestCase):
    """IoK8sApiCoreV1NodeAffinity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApiCoreV1NodeAffinity:
        """Test IoK8sApiCoreV1NodeAffinity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApiCoreV1NodeAffinity`
        """
        model = IoK8sApiCoreV1NodeAffinity()
        if include_optional:
            return IoK8sApiCoreV1NodeAffinity(
                preferred_during_scheduling_ignored_during_execution = [
                    jobset.models.io/k8s/api/core/v1/preferred_scheduling_term.io.k8s.api.core.v1.PreferredSchedulingTerm(
                        preference = jobset.models.io/k8s/api/core/v1/node_selector_term.io.k8s.api.core.v1.NodeSelectorTerm(
                            match_expressions = [
                                jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], 
                            match_fields = [
                                jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                    key = '', 
                                    operator = '', )
                                ], ), 
                        weight = 56, )
                    ],
                required_during_scheduling_ignored_during_execution = jobset.models.io/k8s/api/core/v1/node_selector.io.k8s.api.core.v1.NodeSelector(
                    node_selector_terms = [
                        jobset.models.io/k8s/api/core/v1/node_selector_term.io.k8s.api.core.v1.NodeSelectorTerm(
                            match_expressions = [
                                jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                    key = '', 
                                    operator = '', 
                                    values = [
                                        ''
                                        ], )
                                ], 
                            match_fields = [
                                jobset.models.io/k8s/api/core/v1/node_selector_requirement.io.k8s.api.core.v1.NodeSelectorRequirement(
                                    key = '', 
                                    operator = '', )
                                ], )
                        ], )
            )
        else:
            return IoK8sApiCoreV1NodeAffinity(
        )
        """

    def testIoK8sApiCoreV1NodeAffinity(self):
        """Test IoK8sApiCoreV1NodeAffinity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
